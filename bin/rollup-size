#!/usr/bin/env node

const prettyBytes = require('pretty-bytes')
const rollupSize = require('../')
const browserifySize = require('../lib/browserify-size')
const fail = require('cli-fail')

const packageName = process.argv.slice(2)[0]

if (!packageName) {
  fail('you must provide a package name or path!')
}

const formatBytes = bytes => `${prettyBytes(bytes)} (${bytes}B)`
const format = ({ bytes, minified, gzipped }) => `
  Bundled: ${formatBytes(bytes)}
  Minified: ${formatBytes(minified)}
  Gzipped: ${formatBytes(gzipped)}
`

Promise.all([
  rollupSize(packageName),
  browserifySize(packageName).catch(err => err)
])
  .then(([ rollup, browserify ]) => {
    console.log(`--- Rollup ---${format(rollup)}`)
    process.stdout.write('--- Browserify ---')
    if (browserify instanceof Error) {
      console.log('\n', browserify.message)
    } else {
      console.log(format(browserify))
    }
  })
  .catch(fail)
